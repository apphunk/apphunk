var search_data = {"index":{"searchIndex":["apphunk","config","logger","proxy","remote","result","config()","error()","log()","log_with_options()","new()","post()","prepare_payload()","process_response()","send_message_to_apphunkd()","license","readme.rdoc","apphunk.rb","config.rb","logger.rb","proxy.rb","remote.rb","result.rb"],"longSearchIndex":["lib/apphunk.rb","apphunk","apphunk","apphunk","apphunk","apphunk::remote","apphunk","apphunk::logger","apphunk","apphunk","apphunk::remote::result","apphunk::remote","apphunk::proxy","apphunk::proxy","apphunk::proxy","files/license.html","files/readme_rdoc.html","files/lib/apphunk_rb.html","files/lib/apphunk/config_rb.html","files/lib/apphunk/logger_rb.html","files/lib/apphunk/proxy_rb.html","files/lib/apphunk/remote_rb.html","files/lib/apphunk/remote/result_rb.html"],"info":[["Apphunk","lib/apphunk.rb","classes/Apphunk.html"," < ","",1],["Config","Apphunk","classes/Apphunk/Config.html"," < ","Used to configure the behaviour of Apphunk and its outgoing messages. Each option can be overriden by",1],["Logger","Apphunk","classes/Apphunk/Logger.html"," < ","",1],["Proxy","Apphunk","classes/Apphunk/Proxy.html"," < ","",1],["Remote","Apphunk","classes/Apphunk/Remote.html"," < ","",1],["Result","Apphunk::Remote","classes/Apphunk/Remote/Result.html"," < Object","",1],["config","Apphunk","classes/Apphunk.html#M000008","(&block)","Set runtime configuration options Yields Apphunk::Config which can be used to set configuration options",2],["error","Apphunk::Logger","classes/Apphunk/Logger.html#M000000","(message)","",2],["log","Apphunk","classes/Apphunk.html#M000006","(message, options = {})","Sends a +message+ to your remote inbox at apphunk.com * <tt>message</tt> - The body of the message *",2],["log_with_options","Apphunk","classes/Apphunk.html#M000007","(options = {}, &block)","Send messages with predefined options in a block Yields the Apphunk module which can be used to send",2],["new","Apphunk::Remote::Result","classes/Apphunk/Remote/Result.html#M000004","(opts = {})","",2],["post","Apphunk::Remote","classes/Apphunk/Remote.html#M000005","(url, payload = {}, post_timeout = 30)","",2],["prepare_payload","Apphunk::Proxy","classes/Apphunk/Proxy.html#M000002","(message, options)","",2],["process_response","Apphunk::Proxy","classes/Apphunk/Proxy.html#M000003","(result)","",2],["send_message_to_apphunkd","Apphunk::Proxy","classes/Apphunk/Proxy.html#M000001","(message, options)","",2],["LICENSE","files/LICENSE.html","files/LICENSE.html","","Copyright (c) 2009 Andreas Wolff  Permission is hereby granted, free of charge, to any person obtaining",3],["README.rdoc","files/README_rdoc.html","files/README_rdoc.html","","= apphunk  A library that send's messages to the remote logging service apphunk.com.   == Note on Patches/Pull",3],["apphunk.rb","files/lib/apphunk_rb.html","files/lib/apphunk_rb.html","","",3],["config.rb","files/lib/apphunk/config_rb.html","files/lib/apphunk/config_rb.html","","",3],["logger.rb","files/lib/apphunk/logger_rb.html","files/lib/apphunk/logger_rb.html","","",3],["proxy.rb","files/lib/apphunk/proxy_rb.html","files/lib/apphunk/proxy_rb.html","","",3],["remote.rb","files/lib/apphunk/remote_rb.html","files/lib/apphunk/remote_rb.html","","",3],["result.rb","files/lib/apphunk/remote/result_rb.html","files/lib/apphunk/remote/result_rb.html","","",3]]}}